<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
     http://www.springframework.org/schema/rabbit  
     http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd">

	<!--配置connection-factory，指定连接rabbit server参数 -->
	<rabbit:connection-factory id="connectionFactory"
		username="${rabbit.username}" password="${rabbit.password}" host="${rabbit.host}" port="${rabbit.port}" />

	<!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
	<rabbit:admin id="connectAdmin" connection-factory="connectionFactory" />

	<!--定义queue -->
	<rabbit:queue  name="${queue1.name}" durable="true" auto-delete="false"
		exclusive="false" declared-by="connectAdmin" />
		
	<!-- <rabbit:queue id ="${queue2.name}" name="queue03" durable="true" auto-delete="false"
		exclusive="false" declared-by="connectAdmin" /> -->
		
	<!-- <rabbit:queue id ="${queue3.name}" name="queue03" durable="true" auto-delete="false"
		exclusive="false" declared-by="connectAdmin" />		 -->

	<!-- 定义direct exchange，绑定queueTest -->
	<rabbit:topic-exchange name="exchange" durable="true"
		auto-delete="false" declared-by="connectAdmin">
		<rabbit:bindings>
			<rabbit:binding queue="${queue1.name}" pattern="${queue1.pattern}"></rabbit:binding>
			<!-- <rabbit:binding queue="${queue2.name}" pattern="${queue2.pattern}"></rabbit:binding>
			<rabbit:binding queue="${queue3.name}" pattern="${queue3.pattern}"></rabbit:binding> -->
		</rabbit:bindings>
	</rabbit:topic-exchange>


	<!--定义rabbit template用于数据的接收和发送 -->
	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory"
		exchange="exchange" mandatory="true" />

    <!-- 消息生产者 -->
	<bean id="messageProducer1" class="${producer1.class}">
		<property name="amqpTemplate" ref="amqpTemplate"></property>
	</bean>
	<!-- <bean id="messageProducer2" class="${producer2.class}">
		<property name="amqpTemplate" ref="amqpTemplate"></property>
	</bean>
	<bean id="messageProducer3" class="${producer3.class}">
		<property name="amqpTemplate" ref="amqpTemplate"></property>
	</bean> -->

	<!-- 消息接收者 -->
	<bean id="reciever01" class="${consumer1.class}"></bean>
	<!-- <bean id="reciever02" class="${consumer2.class}"></bean>
	<bean id="reciever03" class="${consumer3.class}"></bean>
 -->
	<!-- queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
	<rabbit:listener-container
		connection-factory="connectionFactory" acknowledge="manual">
		<rabbit:listener queues="${queue1.name}" ref="reciever01"  />
		<!-- <rabbit:listener queues="${queue2.name}" ref="reciever02"  />
		<rabbit:listener queues="${queue3.name}" ref="reciever03"  /> -->
	</rabbit:listener-container>
</beans>